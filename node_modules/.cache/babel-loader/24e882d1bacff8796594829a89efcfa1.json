{"ast":null,"code":"var _jsxFileName = \"/Users/deshala/visualcode-workspace/ReactJS/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.components';\nimport { SearchBox } from './components/search-box/search-box.components';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monsters: users\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          monsters = _this$state.monsters,\n          searchField = _this$state.searchField;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(SearchBox, {\n      placeholder: \"search monster\",\n      handleChange: e => this.setState({\n        searchField: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(CardList, {\n      monsters: filteredMonsters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/deshala/visualcode-workspace/ReactJS/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","SearchBox","App","constructor","state","monsters","searchField","componentDidMount","fetch","then","response","json","users","setState","render","filteredMonsters","filter","monster","name","toLowerCase","includes","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,QAAuB,6CAAvB;AACA,SAAQC,SAAR,QAAwB,+CAAxB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AACzBI,EAAAA,WAAW,GAAE;AACX;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAC,EADE;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADjB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACR,MAAAA,QAAQ,EAAEO;AAAX,KAAd,CAFf;AAID;;AAEDE,EAAAA,MAAM,GAAE;AAAA,wBAC0B,KAAKV,KAD/B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,WADX,eACWA,WADX;AAEN,UAAMS,gBAAgB,GAAGV,QAAQ,CAACW,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCd,WAAW,CAACa,WAAZ,EAApC,CAA3B,CAAzB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAG,gBADhB;AAEE,MAAA,YAAY,EAAIE,CAAC,IAAI,KAAKR,QAAL,CAAc;AAACP,QAAAA,WAAW,EAAGe,CAAC,CAACC,MAAF,CAASC;AAAxB,OAAd,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAER,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AA9BwB;;AAiC3B,eAAeb,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.components';\nimport {SearchBox} from './components/search-box/search-box.components';\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      monsters:[],\n      searchField: ''\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=> response.json())\n    .then(users => this.setState({monsters: users}));\n    \n  }\n\n  render(){\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n      <div className=\"App\">\n        <SearchBox \n          placeholder = \"search monster\"\n          handleChange = {e => this.setState({searchField : e.target.value})}\n        />\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    ) \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}